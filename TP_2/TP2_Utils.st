Object subclass: #SluggishDAO	instanceVariableNames: 'bag'	classVariableNames: ''	poolDictionaries: ''	category: 'TP2_Utils'!!SluggishDAO methodsFor: 'initialization' stamp: '2222 11/20/2019 09:31'!put:anObject "almacena un objeto en memoria"| col |col:= self initializeOrGetCollecitonFor: (anObject class).col add:anObject.! !!SluggishDAO methodsFor: 'initialization' stamp: '2222 11/20/2019 10:27'!select:aBlock forClass: aClass"retorna elementos que satisfacen un bloque demorando 200ms por cada objeto de la colección "| col  selection |col:=self initializeOrGetCollecitonFor: aClass.selection:=col select: aBlock.(Delay forMilliseconds: (200*selection size)) wait.^ selection! !!SluggishDAO methodsFor: 'initialization' stamp: '2222 11/20/2019 10:27'!retrieveAllByClass:aClass"retorna todos los elementos almacenados en memoria de una clase demorando 1 segundo"(Delay forMilliseconds:    1000) wait.^ OrderedCollection   newFrom:  (self initializeOrGetCollecitonFor:  aClass) ! !!SluggishDAO methodsFor: 'initialization' stamp: '2222 11/20/2019 09:16'!initializebag:= Dictionary new.! !!SluggishDAO methodsFor: 'initialization' stamp: '2222 11/20/2019 09:42'!initializeOrGetCollecitonFor: aClass"inicialización lazy de las coleccion de un objeto"^bag at: aClass  ifAbsentPut: (OrderedCollection new).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SluggishDAO class	instanceVariableNames: ''!!SluggishDAO class methodsFor: 'instance creation' stamp: '2222 11/20/2019 09:35'!new^super new initialize ! !TestCase subclass: #SlugglishDAOTestCase	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP2_Utils'!!SlugglishDAOTestCase methodsFor: 'tests' stamp: '2222 11/20/2019 09:45'!testAddObjects| sDAO |sDAO:= SluggishDAO new.sDAO put: 'unString'.sDAO put: 'unString2'.self assert: (sDAO  retrieveAllByClass: ByteString) size  =2.! !!SlugglishDAOTestCase methodsFor: 'tests' stamp: '2222 11/20/2019 10:07'!testLookupObjects| sDAO texto1 texto2 col |sDAO:= SluggishDAO new.texto1:=sDAO put: 'unString'.texto2:=sDAO put: 'unString2'.col:=sDAO select: [:it|  it includesSubstring:  'g2' ] forClass:  ByteString.self assert: (col) size  =1! !