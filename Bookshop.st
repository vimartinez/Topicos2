Object subclass: #Book	instanceVariableNames: 'title author price isBestSeller'	classVariableNames: ''	poolDictionaries: ''	category: 'Bookshop'!!Book commentStamp: 'JulianGrigera 9/6/2019 18:35' prior: 0!A book for sale!!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!title: anObject	title := anObject! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/13/2019 13:47'!commission	| com |	self isBestSeller		ifTrue: [ com := price / 50 ]		ifFalse: [ com := price / 100 ].	^ com! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!author: anObject	author := anObject! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/13/2019 13:48'!priceBeforeTax	| com p p2 |	com := self isBestSeller		ifTrue: [ price / 50 ]		ifFalse: [ price / 100 ].	p := self isBestSeller		ifTrue: [ price * 1.1 ]		ifFalse: [ price ].	p2 := p + com.	^ p2! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!price: anObject	price := anObject! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!title	^ title! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/13/2019 13:08'!isBestSeller: aBoolean	isBestSeller := aBoolean! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/13/2019 13:06'!isBestSeller	^ isBestSeller! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!author	^ author! !!Book methodsFor: 'accessing' stamp: 'JulianGrigera 9/13/2019 13:48'!price	| com p p2 p3 |	self isBestSeller		ifTrue: [ p := price * 1.1.			com := price / 50 ]		ifFalse: [ p := price.			com := price / 100 ].	p2 := p + (p * 21 / 100).	p3 := p2 + com.	^ p3! !!Book methodsFor: 'initialization' stamp: 'JulianGrigera 9/13/2019 13:27'!initialize	super initialize.	isBestSeller := false! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Book class	instanceVariableNames: ''!!Book class methodsFor: 'instance creation' stamp: 'JulianGrigera 9/13/2019 13:07'!newBestSeller	| bs |	bs := Book new.	bs isBestSeller: true.	^ bs! !Object subclass: #BookAuthor	instanceVariableNames: 'name'	classVariableNames: ''	poolDictionaries: ''	category: 'Bookshop'!!BookAuthor commentStamp: 'JulianGrigera 9/6/2019 18:36' prior: 0!An author for books!!BookAuthor methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!name: anObject	name := anObject! !!BookAuthor methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 18:35'!name	^ name! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!BookAuthor class	instanceVariableNames: ''!!BookAuthor class methodsFor: 'instance creation' stamp: 'JulianGrigera 9/6/2019 18:37'!named: aString	^ self new		name: aString;		yourself! !TestCase subclass: #BookTest	instanceVariableNames: 'book bestSeller'	classVariableNames: ''	poolDictionaries: ''	category: 'Bookshop'!!BookTest commentStamp: '<historical>' prior: 0!A BookTest is a test class for testing the behavior of Book!!BookTest methodsFor: 'running' stamp: 'JulianGrigera 9/13/2019 13:25'!setUp	book := Book new		price: 100;		yourself.	bestSeller := Book newBestSeller		price: 100;		yourself! !!BookTest methodsFor: 'test' stamp: 'JulianGrigera 9/13/2019 13:47'!testPrice	self assert: bestSeller price closeTo: 135.1.	self assert: book price closeTo: 122! !!BookTest methodsFor: 'test' stamp: 'JulianGrigera 9/13/2019 13:51'!testPriceBeforeTax	self assert: bestSeller priceBeforeTax closeTo: 112.	self assert: book priceBeforeTax closeTo: 101! !!BookTest methodsFor: 'test' stamp: 'JulianGrigera 9/13/2019 13:46'!testCommission	self assert: book commission equals: 1.	self assert: bestSeller commission equals: 2! !Object subclass: #Catalog	instanceVariableNames: 'books'	classVariableNames: 'Instance'	poolDictionaries: ''	category: 'Bookshop'!!Catalog commentStamp: 'JulianGrigera 9/6/2019 17:15' prior: 0!Bookstore holds all books in the catalog!!Catalog methodsFor: 'initialization' stamp: 'JulianGrigera 9/6/2019 17:23'!initialize	super initialize.	books := OrderedCollection new! !!Catalog methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 17:15'!books: aBook	books := aBook! !!Catalog methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 17:15'!books	^ books! !!Catalog methodsFor: 'accessing' stamp: 'JulianGrigera 9/6/2019 17:16'!addBook: aBook	self books add: aBook! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Catalog class	instanceVariableNames: ''!!Catalog class methodsFor: 'singleton' stamp: 'JulianGrigera 9/6/2019 18:37'!loadBooks	Instance		addBook:			(Book new				title: 'Where the Crawdads Sing';				author: (BookAuthor named: 'Delia Owens');				price: 14.99);		addBook:			(Book new				title: 'A Better Man: A Chief Inspector Gamache Novel';				author: (BookAuthor named: 'Louise Penny');				price: 14.99);		addBook:			(Book new				title: 'One Good Deed';				author: (BookAuthor named: 'David Baldacci');				price: 14.99);		addBook:			(Book new				title: 'City of Girls: A Novel';				author: (BookAuthor named: 'Elizabeth Gilbert');				price: 14.99);		addBook:			(Book new				title: 'Educated: A Memoir';				author: (BookAuthor named: 'Tara Westover');				price: 14.99);		addBook:			(Book new				title: 'Becoming';				author: (BookAuthor named: 'Michelle Obama');				price: 14.99);		addBook:			(Book new				title: 'Sapiens: A Brief History of Humankind';				author: (BookAuthor named: 'Yuval Noah Harari');				price: 14.99);		addBook:			(Book new				title: 'The Subtle Art of Not Giving a F*ck: A Counterintuitive Approach to Living a Good Life';				author: (BookAuthor named: 'Mark Manson');				price: 12.99)! !!Catalog class methodsFor: 'singleton' stamp: 'JulianGrigera 9/6/2019 18:29'!instance	^ Instance		ifNil: [ Instance := self new.			self loadBooks.			Instance ]! !!Catalog class methodsFor: 'singleton' stamp: 'JulianGrigera 9/13/2019 13:59'!resetInstance	<script>	Instance := nil! !WAComponent subclass: #WABookshopView	instanceVariableNames: 'bookstore sec'	classVariableNames: ''	poolDictionaries: ''	category: 'Bookshop'!!WABookshopView commentStamp: 'JulianGrigera 9/6/2019 15:38' prior: 0!Main view for the Bookshop!!WABookshopView methodsFor: 'rendering' stamp: 'JulianGrigera 9/6/2019 19:18'!renderContentOn: html	| it |	html		tbsContainerFluid: [ html				tbsPageHeader: [ html						heading: [ html text: 'Online Bookshop'.							html space.							html small: 'The best catalog around!!' ] ].			html tbsNav				bePills;				with: [ it := html tbsNavItem.					sec = #home						ifTrue: [ it beActive ].					it						with: [ html anchor								callback: [ sec := #home ];								with: 'Home' ].					it := html tbsNavItem.					sec = #latest						ifTrue: [ it beActive ].					it						with: [ html anchor								callback: [ sec := #latest ];								with: 'Latest' ].					it := html tbsNavItem.					sec = #featured						ifTrue: [ it beActive ].					it						with: [ html anchor								callback: [ sec := #featured ];								with: 'Featured' ] ].			bookstore books				do: [ :x | 					| t |					x title size > 30						ifTrue: [ t := x title first: (30 min: x title size).							t := t , '...' ]						ifFalse: [ t := x title ].					html tbsThumbnail						style: 'display:inline-block;width:300px;margin:20px;';						with: [ html image placeHolder: '100%x180'.							html heading level4 with: t.							html paragraph: x author name.							html heading level5 with: x price ] ] ].	html tbsContainerFluid: [ html paragraph: '(c) 2019 Bookshop' ]! !!WABookshopView methodsFor: 'initialization' stamp: 'JulianGrigera 9/6/2019 19:13'!initialize	super initialize.	bookstore := Catalog instance.	sec := #home! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!WABookshopView class	instanceVariableNames: ''!!WABookshopView class methodsFor: 'initialization' stamp: 'JulianGrigera 9/6/2019 15:43'!initialize	| app |	app := WAAdmin register: self asApplicationAt: #bookshop.	app addLibrary: TBSDevelopmentLibrary! !WABookshopView initialize!